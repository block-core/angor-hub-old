"use strict";(self.webpackChunkangor=self.webpackChunkangor||[]).push([[76],{8729:(U,x,s)=>{s.d(x,{i:()=>K});var M=s(467),h=s(4412),l=s(7673),a=s(6648),T=s(8810),b=s(4668),m=s(2498),j=s(8141),P=s(6354),f=s(1397),y=s(5558),v=s(9437),E=s(5964),F=s(6649),I=s(9974);const O=(o,c)=>(o.push(c),o);function S(){return(0,I.N)((o,c)=>{(function $(o,c){return(0,I.N)((0,F.S)(o,c,arguments.length>=2,!1,!0))})(O,[])(o).subscribe(c)})}var n=s(4438),A=s(1626),L=s(833),N=s(7291),D=s(5645);let K=(()=>{class o{constructor(t,e,r,i){this.http=t,this.indexerService=e,this.storageService=r,this.subscriptionService=i,this.INITIAL_OFFSET=0,this.LIMIT=50,this.offset=this.INITIAL_OFFSET,this.totalProjects=0,this.totalProjectsFetched=!1,this.projectsSubject=new h.t([]),this.projects$=this.projectsSubject.asObservable().pipe((0,b.t)(1)),this.loadingSubject=new h.t(!1),this.loading$=this.loadingSubject.asObservable(),this.noMoreProjectsSubject=new h.t(!1),this.noMoreProjects$=this.noMoreProjectsSubject.asObservable(),this.projectStatsSubject=new h.t({}),this.projectStats$=this.projectStatsSubject.asObservable().pipe((0,b.t)(1)),this.selectedNetwork=this.indexerService.getNetwork(),console.log("Selected network:",this.selectedNetwork)}fetchProjects(){if(this.loadingSubject.value||this.noMoreProjectsSubject.value)return console.log("Skipping fetch: Already loading or no more projects."),(0,l.of)([]);this.loadingSubject.next(!0);const e=`${this.indexerService.getPrimaryIndexer(this.selectedNetwork)}api/query/Angor/projects?${this.totalProjectsFetched?`offset=${this.offset}&`:""}limit=${this.LIMIT}`;return this.http.get(e,{observe:"response"}).pipe((0,m.L)(3),(0,j.M)(r=>this.handlePaginationResponse(r)),(0,P.T)(r=>r.body||[]),(0,f.Z)(this.filterUniqueProjects.bind(this)),(0,y.n)(this.processNewProjects.bind(this)),(0,v.W)(this.handleError.bind(this)),(0,j.M)(()=>this.loadingSubject.next(!1)))}handlePaginationResponse(t){if(!this.totalProjectsFetched&&t?.headers){const e=t.headers.get("pagination-total");this.totalProjects=e?+e:0,this.totalProjectsFetched=!0,this.offset=Math.max(this.totalProjects-this.LIMIT,0)}}filterUniqueProjects(t){return(0,a.H)(t).pipe((0,E.p)(e=>!this.projectsSubject.value.some(r=>r.projectIdentifier===e.projectIdentifier)),S())}processNewProjects(t){if(!t.length)return this.noMoreProjectsSubject.next(!0),(0,l.of)([]);const e=(0,a.H)(t).pipe((0,f.Z)(i=>(0,a.H)(this.storageService.saveProject(i))),S()),r=(0,a.H)(t).pipe((0,f.Z)(this.fetchProjectDetails.bind(this)),S());return e.pipe((0,y.n)(()=>r),(0,j.M)(this.updateProjectsList.bind(this)))}fetchProjectDetails(t){return(0,a.H)(this.storageService.getProjectStats(t.projectIdentifier)).pipe((0,P.T)(e=>(this.updateProjectStats(t.projectIdentifier,e),t)),(0,v.W)(e=>(console.error(`Error fetching details for project ${t.projectIdentifier}:`,e),(0,l.of)(t))))}updateProjectsList(t){const e=[...this.projectsSubject.value,...t];this.projectsSubject.next(e),this.subscribeToProjectDetails(t.map(r=>r.nostrEventId)),this.offset=Math.max(this.offset-this.LIMIT,0)}updateProjectStats(t,e){this.projectStatsSubject.next({...this.projectStatsSubject.value,[t]:e})}handleError(t){return console.error("Error fetching projects:",t),this.loadingSubject.next(!1),(0,T.$)(()=>new Error("Failed to fetch projects. Please try again later."))}subscribeToProjectsMetadata(t){this.subscriptionService.addSubscriptions([{kinds:[0],authors:t}],r=>{const i=this.parseMetadataEvent(r);this.storageService.saveProfile(r.pubkey,i)})}subscribeToProjectDetails(t){var e=this;this.subscriptionService.addSubscriptions([{kinds:[30078],ids:t}],function(){var i=(0,M.A)(function*(d){try{const g=Array.isArray(d)?d:[d],u=[];for(const H of g){const p=e.parseMetadataEvent(H);yield e.storageService.saveProjectDetails(p),p.nostrPubKey&&!u.includes(p.nostrPubKey)&&u.push(p.nostrPubKey)}u.length>0&&e.subscribeToProjectsMetadata(u)}catch(g){console.error("Error handling project details subscription:",g)}});return function(d){return i.apply(this,arguments)}}())}parseMetadataEvent(t){try{return JSON.parse(t.content)}catch(e){return console.error("Error parsing metadata event:",e),{}}}fetchProjectStats(t){const r=`${this.indexerService.getPrimaryIndexer(this.selectedNetwork)}api/query/Angor/projects/${t}/stats`;return this.http.get(r).pipe((0,j.M)(i=>this.updateProjectStats(t,i)),(0,v.W)(i=>(console.error(`Error fetching stats for project ${t}:`,i),(0,l.of)({}))))}resetProjects(){this.projectsSubject.next([]),this.noMoreProjectsSubject.next(!1),this.loadingSubject.next(!1),this.projectStatsSubject.next({}),this.offset=this.INITIAL_OFFSET,this.totalProjectsFetched=!1}static{this.\u0275fac=function(e){return new(e||o)(n.KVO(A.Qq),n.KVO(L.F),n.KVO(N.n),n.KVO(D.n))}}static{this.\u0275prov=n.jDH({token:o,factory:o.\u0275fac,providedIn:"root"})}}return o})()}}]);