import{f as u}from"./chunk-QKRGR4YZ.js";import{a,b as l,h as c,ha as y,o as i}from"./chunk-7QMWPNHP.js";var m=(()=>{let r=class r{constructor(){this.relays=[],this.maxRetries=10,this.retryDelay=15e3,this.eventSubject=new i(null),this.relaysSubject=new i([]),this.pool=new u,this.relays=this.loadRelaysFromLocalStorage(),this.connectToRelays(),this.setupVisibilityChangeHandling(),this.relaysSubject.next(this.relays)}loadRelaysFromLocalStorage(){let e=JSON.parse(localStorage.getItem("nostrRelays")||"[]"),t=[{url:"wss://relay.angor.io",connected:!1,retries:0,retryTimeout:null,accessType:"read-write",ws:void 0},{url:"wss://relay2.angor.io",connected:!1,retries:0,retryTimeout:null,accessType:"read-write",ws:void 0}];return e.length>0?e.map(s=>l(a({},s),{connected:!1,retries:0,retryTimeout:null,ws:void 0})):t}saveRelaysToLocalStorage(){let e=this.relays.map(t=>({url:t.url,accessType:t.accessType,connected:t.connected,retries:t.retries,retryTimeout:t.retryTimeout}));localStorage.setItem("nostrRelays",JSON.stringify(e)),this.relaysSubject.next(this.relays)}connectToRelay(e){e.connected||(e.ws=new WebSocket(e.url),e.ws.onopen=()=>{e.connected=!0,e.retries=0,clearTimeout(e.retryTimeout),this.saveRelaysToLocalStorage(),console.log(`Connected to relay: ${e.url}`)},e.ws.onerror=()=>{this.handleRelayError(e)},e.ws.onclose=()=>{e.connected=!1,this.handleRelayError(e)},e.ws.onmessage=t=>{try{let s=typeof t.data=="string"?t.data:t.data.toString("utf-8"),n=JSON.parse(s);this.eventSubject.next(n)}catch(s){console.error("Error parsing WebSocket message:",s)}})}handleRelayError(e){if(e.retries>=this.maxRetries){console.error(`Max retries reached for relay: ${e.url}. No further attempts will be made.`);return}let t=this.retryDelay*e.retries;e.retries++,e.retryTimeout=setTimeout(()=>{this.connectToRelay(e),console.log(`Retrying connection to relay: ${e.url} (Attempt ${e.retries})`)},t)}connectToRelays(){this.relays.forEach(e=>{e.connected||this.connectToRelay(e)})}ensureConnectedRelays(){return c(this,null,function*(){return this.connectToRelays(),new Promise(e=>{let t=()=>{this.getConnectedRelays().length>0?e():setTimeout(t,1e3)};t()})})}setupVisibilityChangeHandling(){document.addEventListener("visibilitychange",()=>{document.visibilityState==="visible"&&this.connectToRelays()}),window.addEventListener("beforeunload",()=>{this.relays.forEach(e=>{e.ws&&e.ws.close()})})}getConnectedRelays(){return this.relays.filter(e=>e.connected).map(e=>e.url)}getRelays(){return this.relaysSubject.asObservable()}publishEventToWriteRelays(e){this.relays.filter(s=>s.accessType==="write"||s.accessType==="read-write").forEach(s=>{s.connected&&s.ws?.readyState===WebSocket.OPEN&&(s.ws.send(JSON.stringify(e)),console.log(`Event published to ${s.url}`))})}addRelay(e,t="read-write"){if(this.relays.some(s=>s.url===e))console.log(`Relay with URL ${e} already exists.`);else{let s={url:e,connected:!1,retries:0,retryTimeout:null,accessType:t,ws:void 0};this.relays.push(s),this.connectToRelay(s),this.saveRelaysToLocalStorage()}}removeRelay(e){this.relays=this.relays.filter(t=>t.url!==e),this.saveRelaysToLocalStorage()}removeAllCustomRelays(){let e=["wss://relay.angor.io","wss://relay2.angor.io"];this.relays=this.relays.filter(t=>e.includes(t.url)),this.saveRelaysToLocalStorage()}updateRelayAccessType(e,t){let s=this.relays.find(n=>n.url===e);s&&(s.accessType=t,this.saveRelaysToLocalStorage())}getPool(){return this.pool}getEventStream(){return this.eventSubject.asObservable()}};r.\u0275fac=function(t){return new(t||r)},r.\u0275prov=y({token:r,factory:r.\u0275fac,providedIn:"root"});let o=r;return o})();export{m as a};
